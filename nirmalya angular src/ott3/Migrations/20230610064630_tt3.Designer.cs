// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ott3;

#nullable disable

namespace ott3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230610064630_tt3")]
    partial class tt3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ott3.Models.AudioLanguage", b =>
                {
                    b.Property<int>("movieUid")
                        .HasColumnType("int");

                    b.Property<string>("lang")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("movieUid", "lang");

                    b.ToTable("AudioLanguages");
                });

            modelBuilder.Entity("ott3.Models.BasicFile", b =>
                {
                    b.Property<int>("uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uid"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("createdBy")
                        .HasColumnType("int");

                    b.Property<string>("ext")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("size")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("updatedBy")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("uid");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("ott3.Models.Crew", b =>
                {
                    b.Property<int>("uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uid"));

                    b.Property<string>("castingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("categoryUid")
                        .HasColumnType("int");

                    b.Property<string>("characterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("movieUid")
                        .HasColumnType("int");

                    b.HasKey("uid");

                    b.HasIndex("categoryUid");

                    b.HasIndex("movieUid");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("ott3.Models.CrewCategory", b =>
                {
                    b.Property<int>("uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uid"));

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("uid");

                    b.ToTable("CrewCategories");
                });

            modelBuilder.Entity("ott3.Models.Genre", b =>
                {
                    b.Property<int>("uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uid"));

                    b.Property<string>("label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("uid");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("ott3.Models.Movie", b =>
                {
                    b.Property<int>("uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uid"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("createdBy")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("duration")
                        .HasColumnType("datetime2");

                    b.Property<int>("genreUid")
                        .HasColumnType("int");

                    b.Property<DateTime>("introEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("introStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("maturityRating")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("movieFileUid")
                        .HasColumnType("int");

                    b.Property<string>("movieTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("releaseYear")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("updatedBy")
                        .HasColumnType("int");

                    b.HasKey("uid");

                    b.HasIndex("genreUid");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("ott3.Models.MovieFile", b =>
                {
                    b.Property<int>("movieUid")
                        .HasColumnType("int");

                    b.Property<int>("fileUid")
                        .HasColumnType("int");

                    b.Property<string>("awslink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("movieUid", "fileUid");

                    b.HasIndex("fileUid");

                    b.HasIndex("movieUid")
                        .IsUnique();

                    b.ToTable("MovieFiles");
                });

            modelBuilder.Entity("ott3.Models.MoviePoster", b =>
                {
                    b.Property<int>("movieUid")
                        .HasColumnType("int");

                    b.Property<int>("fileUid")
                        .HasColumnType("int");

                    b.HasKey("movieUid", "fileUid");

                    b.HasIndex("fileUid");

                    b.ToTable("MoviePosters");
                });

            modelBuilder.Entity("ott3.Models.MoviePreview", b =>
                {
                    b.Property<int>("movieUid")
                        .HasColumnType("int");

                    b.Property<int>("fileUid")
                        .HasColumnType("int");

                    b.HasKey("movieUid", "fileUid");

                    b.HasIndex("fileUid");

                    b.ToTable("MoviePreviews");
                });

            modelBuilder.Entity("ott3.Models.SubtitleLanguage", b =>
                {
                    b.Property<int>("movieUid")
                        .HasColumnType("int");

                    b.Property<string>("lang")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("movieUid", "lang");

                    b.ToTable("SubtitleLanguages");
                });

            modelBuilder.Entity("ott3.Models.User", b =>
                {
                    b.Property<int>("uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uid"));

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int>("admin")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("createdBy")
                        .HasColumnType("int");

                    b.Property<string>("emailid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("updatedBy")
                        .HasColumnType("int");

                    b.HasKey("uid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ott3.Models.UserSession", b =>
                {
                    b.Property<int>("uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("uid"));

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("createdBy")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<string>("sessionId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("sessionPass")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("updatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("updatedBy")
                        .HasColumnType("int");

                    b.Property<int>("userUid")
                        .HasColumnType("int");

                    b.HasKey("uid");

                    b.HasIndex("userUid");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("ott3.Models.AudioLanguage", b =>
                {
                    b.HasOne("ott3.Models.Movie", "movie")
                        .WithMany("audioLanguages")
                        .HasForeignKey("movieUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("movie");
                });

            modelBuilder.Entity("ott3.Models.Crew", b =>
                {
                    b.HasOne("ott3.Models.CrewCategory", "category")
                        .WithMany()
                        .HasForeignKey("categoryUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ott3.Models.Movie", "movie")
                        .WithMany("crews")
                        .HasForeignKey("movieUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("movie");
                });

            modelBuilder.Entity("ott3.Models.Movie", b =>
                {
                    b.HasOne("ott3.Models.Genre", "genre")
                        .WithMany()
                        .HasForeignKey("genreUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genre");
                });

            modelBuilder.Entity("ott3.Models.MovieFile", b =>
                {
                    b.HasOne("ott3.Models.BasicFile", "file")
                        .WithMany()
                        .HasForeignKey("fileUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ott3.Models.Movie", "movie")
                        .WithOne("movieFile")
                        .HasForeignKey("ott3.Models.MovieFile", "movieUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("file");

                    b.Navigation("movie");
                });

            modelBuilder.Entity("ott3.Models.MoviePoster", b =>
                {
                    b.HasOne("ott3.Models.BasicFile", "file")
                        .WithMany()
                        .HasForeignKey("fileUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ott3.Models.Movie", "movie")
                        .WithMany("moviePosters")
                        .HasForeignKey("movieUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("file");

                    b.Navigation("movie");
                });

            modelBuilder.Entity("ott3.Models.MoviePreview", b =>
                {
                    b.HasOne("ott3.Models.BasicFile", "file")
                        .WithMany()
                        .HasForeignKey("fileUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ott3.Models.Movie", "movie")
                        .WithMany("moviePreviews")
                        .HasForeignKey("movieUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("file");

                    b.Navigation("movie");
                });

            modelBuilder.Entity("ott3.Models.SubtitleLanguage", b =>
                {
                    b.HasOne("ott3.Models.Movie", "movie")
                        .WithMany("subtitleLanguages")
                        .HasForeignKey("movieUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("movie");
                });

            modelBuilder.Entity("ott3.Models.UserSession", b =>
                {
                    b.HasOne("ott3.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userUid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("ott3.Models.Movie", b =>
                {
                    b.Navigation("audioLanguages");

                    b.Navigation("crews");

                    b.Navigation("movieFile")
                        .IsRequired();

                    b.Navigation("moviePosters");

                    b.Navigation("moviePreviews");

                    b.Navigation("subtitleLanguages");
                });
#pragma warning restore 612, 618
        }
    }
}
